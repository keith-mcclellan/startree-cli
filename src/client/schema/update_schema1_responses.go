// Code generated by go-swagger; DO NOT EDIT.

package schema

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateSchema1Reader is a Reader for the UpdateSchema1 structure.
type UpdateSchema1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateSchema1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateSchema1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateSchema1BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateSchema1NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateSchema1InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateSchema1OK creates a UpdateSchema1OK with default headers values
func NewUpdateSchema1OK() *UpdateSchema1OK {
	return &UpdateSchema1OK{}
}

/*
UpdateSchema1OK describes a response with status code 200, with default header values.

Successfully updated schema
*/
type UpdateSchema1OK struct {
}

// IsSuccess returns true when this update schema1 o k response has a 2xx status code
func (o *UpdateSchema1OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update schema1 o k response has a 3xx status code
func (o *UpdateSchema1OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update schema1 o k response has a 4xx status code
func (o *UpdateSchema1OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update schema1 o k response has a 5xx status code
func (o *UpdateSchema1OK) IsServerError() bool {
	return false
}

// IsCode returns true when this update schema1 o k response a status code equal to that given
func (o *UpdateSchema1OK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update schema1 o k response
func (o *UpdateSchema1OK) Code() int {
	return 200
}

func (o *UpdateSchema1OK) Error() string {
	return fmt.Sprintf("[PUT /schemas/{schemaName}][%d] updateSchema1OK ", 200)
}

func (o *UpdateSchema1OK) String() string {
	return fmt.Sprintf("[PUT /schemas/{schemaName}][%d] updateSchema1OK ", 200)
}

func (o *UpdateSchema1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSchema1BadRequest creates a UpdateSchema1BadRequest with default headers values
func NewUpdateSchema1BadRequest() *UpdateSchema1BadRequest {
	return &UpdateSchema1BadRequest{}
}

/*
UpdateSchema1BadRequest describes a response with status code 400, with default header values.

Missing or invalid request body
*/
type UpdateSchema1BadRequest struct {
}

// IsSuccess returns true when this update schema1 bad request response has a 2xx status code
func (o *UpdateSchema1BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update schema1 bad request response has a 3xx status code
func (o *UpdateSchema1BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update schema1 bad request response has a 4xx status code
func (o *UpdateSchema1BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update schema1 bad request response has a 5xx status code
func (o *UpdateSchema1BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update schema1 bad request response a status code equal to that given
func (o *UpdateSchema1BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update schema1 bad request response
func (o *UpdateSchema1BadRequest) Code() int {
	return 400
}

func (o *UpdateSchema1BadRequest) Error() string {
	return fmt.Sprintf("[PUT /schemas/{schemaName}][%d] updateSchema1BadRequest ", 400)
}

func (o *UpdateSchema1BadRequest) String() string {
	return fmt.Sprintf("[PUT /schemas/{schemaName}][%d] updateSchema1BadRequest ", 400)
}

func (o *UpdateSchema1BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSchema1NotFound creates a UpdateSchema1NotFound with default headers values
func NewUpdateSchema1NotFound() *UpdateSchema1NotFound {
	return &UpdateSchema1NotFound{}
}

/*
UpdateSchema1NotFound describes a response with status code 404, with default header values.

Schema not found
*/
type UpdateSchema1NotFound struct {
}

// IsSuccess returns true when this update schema1 not found response has a 2xx status code
func (o *UpdateSchema1NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update schema1 not found response has a 3xx status code
func (o *UpdateSchema1NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update schema1 not found response has a 4xx status code
func (o *UpdateSchema1NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update schema1 not found response has a 5xx status code
func (o *UpdateSchema1NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update schema1 not found response a status code equal to that given
func (o *UpdateSchema1NotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update schema1 not found response
func (o *UpdateSchema1NotFound) Code() int {
	return 404
}

func (o *UpdateSchema1NotFound) Error() string {
	return fmt.Sprintf("[PUT /schemas/{schemaName}][%d] updateSchema1NotFound ", 404)
}

func (o *UpdateSchema1NotFound) String() string {
	return fmt.Sprintf("[PUT /schemas/{schemaName}][%d] updateSchema1NotFound ", 404)
}

func (o *UpdateSchema1NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSchema1InternalServerError creates a UpdateSchema1InternalServerError with default headers values
func NewUpdateSchema1InternalServerError() *UpdateSchema1InternalServerError {
	return &UpdateSchema1InternalServerError{}
}

/*
UpdateSchema1InternalServerError describes a response with status code 500, with default header values.

Internal error
*/
type UpdateSchema1InternalServerError struct {
}

// IsSuccess returns true when this update schema1 internal server error response has a 2xx status code
func (o *UpdateSchema1InternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update schema1 internal server error response has a 3xx status code
func (o *UpdateSchema1InternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update schema1 internal server error response has a 4xx status code
func (o *UpdateSchema1InternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update schema1 internal server error response has a 5xx status code
func (o *UpdateSchema1InternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update schema1 internal server error response a status code equal to that given
func (o *UpdateSchema1InternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update schema1 internal server error response
func (o *UpdateSchema1InternalServerError) Code() int {
	return 500
}

func (o *UpdateSchema1InternalServerError) Error() string {
	return fmt.Sprintf("[PUT /schemas/{schemaName}][%d] updateSchema1InternalServerError ", 500)
}

func (o *UpdateSchema1InternalServerError) String() string {
	return fmt.Sprintf("[PUT /schemas/{schemaName}][%d] updateSchema1InternalServerError ", 500)
}

func (o *UpdateSchema1InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
