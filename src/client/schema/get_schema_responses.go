// Code generated by go-swagger; DO NOT EDIT.

package schema

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetSchemaReader is a Reader for the GetSchema structure.
type GetSchemaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSchemaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSchemaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSchemaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSchemaInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSchemaOK creates a GetSchemaOK with default headers values
func NewGetSchemaOK() *GetSchemaOK {
	return &GetSchemaOK{}
}

/*
GetSchemaOK describes a response with status code 200, with default header values.

Success
*/
type GetSchemaOK struct {
	Payload []string
}

// IsSuccess returns true when this get schema o k response has a 2xx status code
func (o *GetSchemaOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get schema o k response has a 3xx status code
func (o *GetSchemaOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get schema o k response has a 4xx status code
func (o *GetSchemaOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get schema o k response has a 5xx status code
func (o *GetSchemaOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get schema o k response a status code equal to that given
func (o *GetSchemaOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get schema o k response
func (o *GetSchemaOK) Code() int {
	return 200
}

func (o *GetSchemaOK) Error() string {
	return fmt.Sprintf("[GET /schemas/{schemaName}][%d] getSchemaOK  %+v", 200, o.Payload)
}

func (o *GetSchemaOK) String() string {
	return fmt.Sprintf("[GET /schemas/{schemaName}][%d] getSchemaOK  %+v", 200, o.Payload)
}

func (o *GetSchemaOK) GetPayload() []string {
	return o.Payload
}

func (o *GetSchemaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchemaNotFound creates a GetSchemaNotFound with default headers values
func NewGetSchemaNotFound() *GetSchemaNotFound {
	return &GetSchemaNotFound{}
}

/*
GetSchemaNotFound describes a response with status code 404, with default header values.

Schema not found
*/
type GetSchemaNotFound struct {
}

// IsSuccess returns true when this get schema not found response has a 2xx status code
func (o *GetSchemaNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get schema not found response has a 3xx status code
func (o *GetSchemaNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get schema not found response has a 4xx status code
func (o *GetSchemaNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get schema not found response has a 5xx status code
func (o *GetSchemaNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get schema not found response a status code equal to that given
func (o *GetSchemaNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get schema not found response
func (o *GetSchemaNotFound) Code() int {
	return 404
}

func (o *GetSchemaNotFound) Error() string {
	return fmt.Sprintf("[GET /schemas/{schemaName}][%d] getSchemaNotFound ", 404)
}

func (o *GetSchemaNotFound) String() string {
	return fmt.Sprintf("[GET /schemas/{schemaName}][%d] getSchemaNotFound ", 404)
}

func (o *GetSchemaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSchemaInternalServerError creates a GetSchemaInternalServerError with default headers values
func NewGetSchemaInternalServerError() *GetSchemaInternalServerError {
	return &GetSchemaInternalServerError{}
}

/*
GetSchemaInternalServerError describes a response with status code 500, with default header values.

Internal error
*/
type GetSchemaInternalServerError struct {
}

// IsSuccess returns true when this get schema internal server error response has a 2xx status code
func (o *GetSchemaInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get schema internal server error response has a 3xx status code
func (o *GetSchemaInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get schema internal server error response has a 4xx status code
func (o *GetSchemaInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get schema internal server error response has a 5xx status code
func (o *GetSchemaInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get schema internal server error response a status code equal to that given
func (o *GetSchemaInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get schema internal server error response
func (o *GetSchemaInternalServerError) Code() int {
	return 500
}

func (o *GetSchemaInternalServerError) Error() string {
	return fmt.Sprintf("[GET /schemas/{schemaName}][%d] getSchemaInternalServerError ", 500)
}

func (o *GetSchemaInternalServerError) String() string {
	return fmt.Sprintf("[GET /schemas/{schemaName}][%d] getSchemaInternalServerError ", 500)
}

func (o *GetSchemaInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
