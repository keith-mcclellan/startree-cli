// Code generated by go-swagger; DO NOT EDIT.

package schema

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ValidateSchema1Reader is a Reader for the ValidateSchema1 structure.
type ValidateSchema1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ValidateSchema1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewValidateSchema1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewValidateSchema1BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewValidateSchema1InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewValidateSchema1OK creates a ValidateSchema1OK with default headers values
func NewValidateSchema1OK() *ValidateSchema1OK {
	return &ValidateSchema1OK{}
}

/*
ValidateSchema1OK describes a response with status code 200, with default header values.

Successfully validated schema
*/
type ValidateSchema1OK struct {
}

// IsSuccess returns true when this validate schema1 o k response has a 2xx status code
func (o *ValidateSchema1OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this validate schema1 o k response has a 3xx status code
func (o *ValidateSchema1OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate schema1 o k response has a 4xx status code
func (o *ValidateSchema1OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate schema1 o k response has a 5xx status code
func (o *ValidateSchema1OK) IsServerError() bool {
	return false
}

// IsCode returns true when this validate schema1 o k response a status code equal to that given
func (o *ValidateSchema1OK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the validate schema1 o k response
func (o *ValidateSchema1OK) Code() int {
	return 200
}

func (o *ValidateSchema1OK) Error() string {
	return fmt.Sprintf("[POST /schemas/validate][%d] validateSchema1OK ", 200)
}

func (o *ValidateSchema1OK) String() string {
	return fmt.Sprintf("[POST /schemas/validate][%d] validateSchema1OK ", 200)
}

func (o *ValidateSchema1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewValidateSchema1BadRequest creates a ValidateSchema1BadRequest with default headers values
func NewValidateSchema1BadRequest() *ValidateSchema1BadRequest {
	return &ValidateSchema1BadRequest{}
}

/*
ValidateSchema1BadRequest describes a response with status code 400, with default header values.

Missing or invalid request body
*/
type ValidateSchema1BadRequest struct {
}

// IsSuccess returns true when this validate schema1 bad request response has a 2xx status code
func (o *ValidateSchema1BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate schema1 bad request response has a 3xx status code
func (o *ValidateSchema1BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate schema1 bad request response has a 4xx status code
func (o *ValidateSchema1BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate schema1 bad request response has a 5xx status code
func (o *ValidateSchema1BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this validate schema1 bad request response a status code equal to that given
func (o *ValidateSchema1BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the validate schema1 bad request response
func (o *ValidateSchema1BadRequest) Code() int {
	return 400
}

func (o *ValidateSchema1BadRequest) Error() string {
	return fmt.Sprintf("[POST /schemas/validate][%d] validateSchema1BadRequest ", 400)
}

func (o *ValidateSchema1BadRequest) String() string {
	return fmt.Sprintf("[POST /schemas/validate][%d] validateSchema1BadRequest ", 400)
}

func (o *ValidateSchema1BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewValidateSchema1InternalServerError creates a ValidateSchema1InternalServerError with default headers values
func NewValidateSchema1InternalServerError() *ValidateSchema1InternalServerError {
	return &ValidateSchema1InternalServerError{}
}

/*
ValidateSchema1InternalServerError describes a response with status code 500, with default header values.

Internal error
*/
type ValidateSchema1InternalServerError struct {
}

// IsSuccess returns true when this validate schema1 internal server error response has a 2xx status code
func (o *ValidateSchema1InternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate schema1 internal server error response has a 3xx status code
func (o *ValidateSchema1InternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate schema1 internal server error response has a 4xx status code
func (o *ValidateSchema1InternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate schema1 internal server error response has a 5xx status code
func (o *ValidateSchema1InternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this validate schema1 internal server error response a status code equal to that given
func (o *ValidateSchema1InternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the validate schema1 internal server error response
func (o *ValidateSchema1InternalServerError) Code() int {
	return 500
}

func (o *ValidateSchema1InternalServerError) Error() string {
	return fmt.Sprintf("[POST /schemas/validate][%d] validateSchema1InternalServerError ", 500)
}

func (o *ValidateSchema1InternalServerError) String() string {
	return fmt.Sprintf("[POST /schemas/validate][%d] validateSchema1InternalServerError ", 500)
}

func (o *ValidateSchema1InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
