// Code generated by go-swagger; DO NOT EDIT.

package logger

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewSetLoggerLevelParams creates a new SetLoggerLevelParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSetLoggerLevelParams() *SetLoggerLevelParams {
	return &SetLoggerLevelParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSetLoggerLevelParamsWithTimeout creates a new SetLoggerLevelParams object
// with the ability to set a timeout on a request.
func NewSetLoggerLevelParamsWithTimeout(timeout time.Duration) *SetLoggerLevelParams {
	return &SetLoggerLevelParams{
		timeout: timeout,
	}
}

// NewSetLoggerLevelParamsWithContext creates a new SetLoggerLevelParams object
// with the ability to set a context for a request.
func NewSetLoggerLevelParamsWithContext(ctx context.Context) *SetLoggerLevelParams {
	return &SetLoggerLevelParams{
		Context: ctx,
	}
}

// NewSetLoggerLevelParamsWithHTTPClient creates a new SetLoggerLevelParams object
// with the ability to set a custom HTTPClient for a request.
func NewSetLoggerLevelParamsWithHTTPClient(client *http.Client) *SetLoggerLevelParams {
	return &SetLoggerLevelParams{
		HTTPClient: client,
	}
}

/*
SetLoggerLevelParams contains all the parameters to send to the API endpoint

	for the set logger level operation.

	Typically these are written to a http.Request.
*/
type SetLoggerLevelParams struct {

	/* Level.

	   Logger level
	*/
	Level *string

	/* LoggerName.

	   Logger name
	*/
	LoggerName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the set logger level params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SetLoggerLevelParams) WithDefaults() *SetLoggerLevelParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the set logger level params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SetLoggerLevelParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the set logger level params
func (o *SetLoggerLevelParams) WithTimeout(timeout time.Duration) *SetLoggerLevelParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the set logger level params
func (o *SetLoggerLevelParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the set logger level params
func (o *SetLoggerLevelParams) WithContext(ctx context.Context) *SetLoggerLevelParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the set logger level params
func (o *SetLoggerLevelParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the set logger level params
func (o *SetLoggerLevelParams) WithHTTPClient(client *http.Client) *SetLoggerLevelParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the set logger level params
func (o *SetLoggerLevelParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLevel adds the level to the set logger level params
func (o *SetLoggerLevelParams) WithLevel(level *string) *SetLoggerLevelParams {
	o.SetLevel(level)
	return o
}

// SetLevel adds the level to the set logger level params
func (o *SetLoggerLevelParams) SetLevel(level *string) {
	o.Level = level
}

// WithLoggerName adds the loggerName to the set logger level params
func (o *SetLoggerLevelParams) WithLoggerName(loggerName string) *SetLoggerLevelParams {
	o.SetLoggerName(loggerName)
	return o
}

// SetLoggerName adds the loggerName to the set logger level params
func (o *SetLoggerLevelParams) SetLoggerName(loggerName string) {
	o.LoggerName = loggerName
}

// WriteToRequest writes these params to a swagger request
func (o *SetLoggerLevelParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Level != nil {

		// query param level
		var qrLevel string

		if o.Level != nil {
			qrLevel = *o.Level
		}
		qLevel := qrLevel
		if qLevel != "" {

			if err := r.SetQueryParam("level", qLevel); err != nil {
				return err
			}
		}
	}

	// path param loggerName
	if err := r.SetPathParam("loggerName", o.LoggerName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
