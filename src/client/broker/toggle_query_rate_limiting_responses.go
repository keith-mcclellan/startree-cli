// Code generated by go-swagger; DO NOT EDIT.

package broker

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ToggleQueryRateLimitingReader is a Reader for the ToggleQueryRateLimiting structure.
type ToggleQueryRateLimitingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ToggleQueryRateLimitingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewToggleQueryRateLimitingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewToggleQueryRateLimitingBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewToggleQueryRateLimitingNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewToggleQueryRateLimitingInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewToggleQueryRateLimitingOK creates a ToggleQueryRateLimitingOK with default headers values
func NewToggleQueryRateLimitingOK() *ToggleQueryRateLimitingOK {
	return &ToggleQueryRateLimitingOK{}
}

/*
ToggleQueryRateLimitingOK describes a response with status code 200, with default header values.

Success
*/
type ToggleQueryRateLimitingOK struct {
}

// IsSuccess returns true when this toggle query rate limiting o k response has a 2xx status code
func (o *ToggleQueryRateLimitingOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this toggle query rate limiting o k response has a 3xx status code
func (o *ToggleQueryRateLimitingOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this toggle query rate limiting o k response has a 4xx status code
func (o *ToggleQueryRateLimitingOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this toggle query rate limiting o k response has a 5xx status code
func (o *ToggleQueryRateLimitingOK) IsServerError() bool {
	return false
}

// IsCode returns true when this toggle query rate limiting o k response a status code equal to that given
func (o *ToggleQueryRateLimitingOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the toggle query rate limiting o k response
func (o *ToggleQueryRateLimitingOK) Code() int {
	return 200
}

func (o *ToggleQueryRateLimitingOK) Error() string {
	return fmt.Sprintf("[POST /brokers/instances/{instanceName}/qps][%d] toggleQueryRateLimitingOK ", 200)
}

func (o *ToggleQueryRateLimitingOK) String() string {
	return fmt.Sprintf("[POST /brokers/instances/{instanceName}/qps][%d] toggleQueryRateLimitingOK ", 200)
}

func (o *ToggleQueryRateLimitingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewToggleQueryRateLimitingBadRequest creates a ToggleQueryRateLimitingBadRequest with default headers values
func NewToggleQueryRateLimitingBadRequest() *ToggleQueryRateLimitingBadRequest {
	return &ToggleQueryRateLimitingBadRequest{}
}

/*
ToggleQueryRateLimitingBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ToggleQueryRateLimitingBadRequest struct {
}

// IsSuccess returns true when this toggle query rate limiting bad request response has a 2xx status code
func (o *ToggleQueryRateLimitingBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this toggle query rate limiting bad request response has a 3xx status code
func (o *ToggleQueryRateLimitingBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this toggle query rate limiting bad request response has a 4xx status code
func (o *ToggleQueryRateLimitingBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this toggle query rate limiting bad request response has a 5xx status code
func (o *ToggleQueryRateLimitingBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this toggle query rate limiting bad request response a status code equal to that given
func (o *ToggleQueryRateLimitingBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the toggle query rate limiting bad request response
func (o *ToggleQueryRateLimitingBadRequest) Code() int {
	return 400
}

func (o *ToggleQueryRateLimitingBadRequest) Error() string {
	return fmt.Sprintf("[POST /brokers/instances/{instanceName}/qps][%d] toggleQueryRateLimitingBadRequest ", 400)
}

func (o *ToggleQueryRateLimitingBadRequest) String() string {
	return fmt.Sprintf("[POST /brokers/instances/{instanceName}/qps][%d] toggleQueryRateLimitingBadRequest ", 400)
}

func (o *ToggleQueryRateLimitingBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewToggleQueryRateLimitingNotFound creates a ToggleQueryRateLimitingNotFound with default headers values
func NewToggleQueryRateLimitingNotFound() *ToggleQueryRateLimitingNotFound {
	return &ToggleQueryRateLimitingNotFound{}
}

/*
ToggleQueryRateLimitingNotFound describes a response with status code 404, with default header values.

Instance not found
*/
type ToggleQueryRateLimitingNotFound struct {
}

// IsSuccess returns true when this toggle query rate limiting not found response has a 2xx status code
func (o *ToggleQueryRateLimitingNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this toggle query rate limiting not found response has a 3xx status code
func (o *ToggleQueryRateLimitingNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this toggle query rate limiting not found response has a 4xx status code
func (o *ToggleQueryRateLimitingNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this toggle query rate limiting not found response has a 5xx status code
func (o *ToggleQueryRateLimitingNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this toggle query rate limiting not found response a status code equal to that given
func (o *ToggleQueryRateLimitingNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the toggle query rate limiting not found response
func (o *ToggleQueryRateLimitingNotFound) Code() int {
	return 404
}

func (o *ToggleQueryRateLimitingNotFound) Error() string {
	return fmt.Sprintf("[POST /brokers/instances/{instanceName}/qps][%d] toggleQueryRateLimitingNotFound ", 404)
}

func (o *ToggleQueryRateLimitingNotFound) String() string {
	return fmt.Sprintf("[POST /brokers/instances/{instanceName}/qps][%d] toggleQueryRateLimitingNotFound ", 404)
}

func (o *ToggleQueryRateLimitingNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewToggleQueryRateLimitingInternalServerError creates a ToggleQueryRateLimitingInternalServerError with default headers values
func NewToggleQueryRateLimitingInternalServerError() *ToggleQueryRateLimitingInternalServerError {
	return &ToggleQueryRateLimitingInternalServerError{}
}

/*
ToggleQueryRateLimitingInternalServerError describes a response with status code 500, with default header values.

Internal error
*/
type ToggleQueryRateLimitingInternalServerError struct {
}

// IsSuccess returns true when this toggle query rate limiting internal server error response has a 2xx status code
func (o *ToggleQueryRateLimitingInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this toggle query rate limiting internal server error response has a 3xx status code
func (o *ToggleQueryRateLimitingInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this toggle query rate limiting internal server error response has a 4xx status code
func (o *ToggleQueryRateLimitingInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this toggle query rate limiting internal server error response has a 5xx status code
func (o *ToggleQueryRateLimitingInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this toggle query rate limiting internal server error response a status code equal to that given
func (o *ToggleQueryRateLimitingInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the toggle query rate limiting internal server error response
func (o *ToggleQueryRateLimitingInternalServerError) Code() int {
	return 500
}

func (o *ToggleQueryRateLimitingInternalServerError) Error() string {
	return fmt.Sprintf("[POST /brokers/instances/{instanceName}/qps][%d] toggleQueryRateLimitingInternalServerError ", 500)
}

func (o *ToggleQueryRateLimitingInternalServerError) String() string {
	return fmt.Sprintf("[POST /brokers/instances/{instanceName}/qps][%d] toggleQueryRateLimitingInternalServerError ", 500)
}

func (o *ToggleQueryRateLimitingInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
