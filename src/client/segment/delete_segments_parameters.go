// Code generated by go-swagger; DO NOT EDIT.

package segment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteSegmentsParams creates a new DeleteSegmentsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteSegmentsParams() *DeleteSegmentsParams {
	return &DeleteSegmentsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteSegmentsParamsWithTimeout creates a new DeleteSegmentsParams object
// with the ability to set a timeout on a request.
func NewDeleteSegmentsParamsWithTimeout(timeout time.Duration) *DeleteSegmentsParams {
	return &DeleteSegmentsParams{
		timeout: timeout,
	}
}

// NewDeleteSegmentsParamsWithContext creates a new DeleteSegmentsParams object
// with the ability to set a context for a request.
func NewDeleteSegmentsParamsWithContext(ctx context.Context) *DeleteSegmentsParams {
	return &DeleteSegmentsParams{
		Context: ctx,
	}
}

// NewDeleteSegmentsParamsWithHTTPClient creates a new DeleteSegmentsParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteSegmentsParamsWithHTTPClient(client *http.Client) *DeleteSegmentsParams {
	return &DeleteSegmentsParams{
		HTTPClient: client,
	}
}

/*
DeleteSegmentsParams contains all the parameters to send to the API endpoint

	for the delete segments operation.

	Typically these are written to a http.Request.
*/
type DeleteSegmentsParams struct {

	// Body.
	Body []string

	/* Retention.

	   Retention period for the table segments (e.g. 12h, 3d); If not set, the retention period will default to the first config that's not null: the table config, then to cluster setting, then '7d'. Using 0d or -1d will instantly delete segments without retention
	*/
	Retention *string

	/* TableName.

	   Name of the table
	*/
	TableName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete segments params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteSegmentsParams) WithDefaults() *DeleteSegmentsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete segments params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteSegmentsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete segments params
func (o *DeleteSegmentsParams) WithTimeout(timeout time.Duration) *DeleteSegmentsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete segments params
func (o *DeleteSegmentsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete segments params
func (o *DeleteSegmentsParams) WithContext(ctx context.Context) *DeleteSegmentsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete segments params
func (o *DeleteSegmentsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete segments params
func (o *DeleteSegmentsParams) WithHTTPClient(client *http.Client) *DeleteSegmentsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete segments params
func (o *DeleteSegmentsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the delete segments params
func (o *DeleteSegmentsParams) WithBody(body []string) *DeleteSegmentsParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the delete segments params
func (o *DeleteSegmentsParams) SetBody(body []string) {
	o.Body = body
}

// WithRetention adds the retention to the delete segments params
func (o *DeleteSegmentsParams) WithRetention(retention *string) *DeleteSegmentsParams {
	o.SetRetention(retention)
	return o
}

// SetRetention adds the retention to the delete segments params
func (o *DeleteSegmentsParams) SetRetention(retention *string) {
	o.Retention = retention
}

// WithTableName adds the tableName to the delete segments params
func (o *DeleteSegmentsParams) WithTableName(tableName string) *DeleteSegmentsParams {
	o.SetTableName(tableName)
	return o
}

// SetTableName adds the tableName to the delete segments params
func (o *DeleteSegmentsParams) SetTableName(tableName string) {
	o.TableName = tableName
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteSegmentsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if o.Retention != nil {

		// query param retention
		var qrRetention string

		if o.Retention != nil {
			qrRetention = *o.Retention
		}
		qRetention := qrRetention
		if qRetention != "" {

			if err := r.SetQueryParam("retention", qRetention); err != nil {
				return err
			}
		}
	}

	// path param tableName
	if err := r.SetPathParam("tableName", o.TableName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
