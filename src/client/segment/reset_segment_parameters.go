// Code generated by go-swagger; DO NOT EDIT.

package segment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewResetSegmentParams creates a new ResetSegmentParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewResetSegmentParams() *ResetSegmentParams {
	return &ResetSegmentParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewResetSegmentParamsWithTimeout creates a new ResetSegmentParams object
// with the ability to set a timeout on a request.
func NewResetSegmentParamsWithTimeout(timeout time.Duration) *ResetSegmentParams {
	return &ResetSegmentParams{
		timeout: timeout,
	}
}

// NewResetSegmentParamsWithContext creates a new ResetSegmentParams object
// with the ability to set a context for a request.
func NewResetSegmentParamsWithContext(ctx context.Context) *ResetSegmentParams {
	return &ResetSegmentParams{
		Context: ctx,
	}
}

// NewResetSegmentParamsWithHTTPClient creates a new ResetSegmentParams object
// with the ability to set a custom HTTPClient for a request.
func NewResetSegmentParamsWithHTTPClient(client *http.Client) *ResetSegmentParams {
	return &ResetSegmentParams{
		HTTPClient: client,
	}
}

/*
ResetSegmentParams contains all the parameters to send to the API endpoint

	for the reset segment operation.

	Typically these are written to a http.Request.
*/
type ResetSegmentParams struct {

	/* SegmentName.

	   Name of the segment
	*/
	SegmentName string

	/* TableNameWithType.

	   Name of the table with type
	*/
	TableNameWithType string

	/* TargetInstance.

	   Name of the target instance to reset
	*/
	TargetInstance *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the reset segment params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ResetSegmentParams) WithDefaults() *ResetSegmentParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the reset segment params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ResetSegmentParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the reset segment params
func (o *ResetSegmentParams) WithTimeout(timeout time.Duration) *ResetSegmentParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the reset segment params
func (o *ResetSegmentParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the reset segment params
func (o *ResetSegmentParams) WithContext(ctx context.Context) *ResetSegmentParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the reset segment params
func (o *ResetSegmentParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the reset segment params
func (o *ResetSegmentParams) WithHTTPClient(client *http.Client) *ResetSegmentParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the reset segment params
func (o *ResetSegmentParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSegmentName adds the segmentName to the reset segment params
func (o *ResetSegmentParams) WithSegmentName(segmentName string) *ResetSegmentParams {
	o.SetSegmentName(segmentName)
	return o
}

// SetSegmentName adds the segmentName to the reset segment params
func (o *ResetSegmentParams) SetSegmentName(segmentName string) {
	o.SegmentName = segmentName
}

// WithTableNameWithType adds the tableNameWithType to the reset segment params
func (o *ResetSegmentParams) WithTableNameWithType(tableNameWithType string) *ResetSegmentParams {
	o.SetTableNameWithType(tableNameWithType)
	return o
}

// SetTableNameWithType adds the tableNameWithType to the reset segment params
func (o *ResetSegmentParams) SetTableNameWithType(tableNameWithType string) {
	o.TableNameWithType = tableNameWithType
}

// WithTargetInstance adds the targetInstance to the reset segment params
func (o *ResetSegmentParams) WithTargetInstance(targetInstance *string) *ResetSegmentParams {
	o.SetTargetInstance(targetInstance)
	return o
}

// SetTargetInstance adds the targetInstance to the reset segment params
func (o *ResetSegmentParams) SetTargetInstance(targetInstance *string) {
	o.TargetInstance = targetInstance
}

// WriteToRequest writes these params to a swagger request
func (o *ResetSegmentParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param segmentName
	if err := r.SetPathParam("segmentName", o.SegmentName); err != nil {
		return err
	}

	// path param tableNameWithType
	if err := r.SetPathParam("tableNameWithType", o.TableNameWithType); err != nil {
		return err
	}

	if o.TargetInstance != nil {

		// query param targetInstance
		var qrTargetInstance string

		if o.TargetInstance != nil {
			qrTargetInstance = *o.TargetInstance
		}
		qTargetInstance := qrTargetInstance
		if qTargetInstance != "" {

			if err := r.SetQueryParam("targetInstance", qTargetInstance); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
