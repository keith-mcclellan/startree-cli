// Code generated by go-swagger; DO NOT EDIT.

package segment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetSegmentsParams creates a new GetSegmentsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetSegmentsParams() *GetSegmentsParams {
	return &GetSegmentsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetSegmentsParamsWithTimeout creates a new GetSegmentsParams object
// with the ability to set a timeout on a request.
func NewGetSegmentsParamsWithTimeout(timeout time.Duration) *GetSegmentsParams {
	return &GetSegmentsParams{
		timeout: timeout,
	}
}

// NewGetSegmentsParamsWithContext creates a new GetSegmentsParams object
// with the ability to set a context for a request.
func NewGetSegmentsParamsWithContext(ctx context.Context) *GetSegmentsParams {
	return &GetSegmentsParams{
		Context: ctx,
	}
}

// NewGetSegmentsParamsWithHTTPClient creates a new GetSegmentsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetSegmentsParamsWithHTTPClient(client *http.Client) *GetSegmentsParams {
	return &GetSegmentsParams{
		HTTPClient: client,
	}
}

/*
GetSegmentsParams contains all the parameters to send to the API endpoint

	for the get segments operation.

	Typically these are written to a http.Request.
*/
type GetSegmentsParams struct {

	/* ExcludeReplacedSegments.

	   Whether to exclude replaced segments in the response, which have been replaced specified in the segment lineage entries and cannot be queried from the table
	*/
	ExcludeReplacedSegments *string

	/* TableName.

	   Name of the table
	*/
	TableName string

	/* Type.

	   OFFLINE|REALTIME
	*/
	Type *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get segments params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetSegmentsParams) WithDefaults() *GetSegmentsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get segments params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetSegmentsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get segments params
func (o *GetSegmentsParams) WithTimeout(timeout time.Duration) *GetSegmentsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get segments params
func (o *GetSegmentsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get segments params
func (o *GetSegmentsParams) WithContext(ctx context.Context) *GetSegmentsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get segments params
func (o *GetSegmentsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get segments params
func (o *GetSegmentsParams) WithHTTPClient(client *http.Client) *GetSegmentsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get segments params
func (o *GetSegmentsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithExcludeReplacedSegments adds the excludeReplacedSegments to the get segments params
func (o *GetSegmentsParams) WithExcludeReplacedSegments(excludeReplacedSegments *string) *GetSegmentsParams {
	o.SetExcludeReplacedSegments(excludeReplacedSegments)
	return o
}

// SetExcludeReplacedSegments adds the excludeReplacedSegments to the get segments params
func (o *GetSegmentsParams) SetExcludeReplacedSegments(excludeReplacedSegments *string) {
	o.ExcludeReplacedSegments = excludeReplacedSegments
}

// WithTableName adds the tableName to the get segments params
func (o *GetSegmentsParams) WithTableName(tableName string) *GetSegmentsParams {
	o.SetTableName(tableName)
	return o
}

// SetTableName adds the tableName to the get segments params
func (o *GetSegmentsParams) SetTableName(tableName string) {
	o.TableName = tableName
}

// WithType adds the typeVar to the get segments params
func (o *GetSegmentsParams) WithType(typeVar *string) *GetSegmentsParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the get segments params
func (o *GetSegmentsParams) SetType(typeVar *string) {
	o.Type = typeVar
}

// WriteToRequest writes these params to a swagger request
func (o *GetSegmentsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ExcludeReplacedSegments != nil {

		// query param excludeReplacedSegments
		var qrExcludeReplacedSegments string

		if o.ExcludeReplacedSegments != nil {
			qrExcludeReplacedSegments = *o.ExcludeReplacedSegments
		}
		qExcludeReplacedSegments := qrExcludeReplacedSegments
		if qExcludeReplacedSegments != "" {

			if err := r.SetQueryParam("excludeReplacedSegments", qExcludeReplacedSegments); err != nil {
				return err
			}
		}
	}

	// path param tableName
	if err := r.SetPathParam("tableName", o.TableName); err != nil {
		return err
	}

	if o.Type != nil {

		// query param type
		var qrType string

		if o.Type != nil {
			qrType = *o.Type
		}
		qType := qrType
		if qType != "" {

			if err := r.SetQueryParam("type", qType); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
