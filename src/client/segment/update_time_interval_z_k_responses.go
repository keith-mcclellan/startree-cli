// Code generated by go-swagger; DO NOT EDIT.

package segment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateTimeIntervalZKReader is a Reader for the UpdateTimeIntervalZK structure.
type UpdateTimeIntervalZKReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateTimeIntervalZKReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateTimeIntervalZKOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewUpdateTimeIntervalZKNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateTimeIntervalZKInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateTimeIntervalZKOK creates a UpdateTimeIntervalZKOK with default headers values
func NewUpdateTimeIntervalZKOK() *UpdateTimeIntervalZKOK {
	return &UpdateTimeIntervalZKOK{}
}

/*
UpdateTimeIntervalZKOK describes a response with status code 200, with default header values.

Success
*/
type UpdateTimeIntervalZKOK struct {
}

// IsSuccess returns true when this update time interval z k o k response has a 2xx status code
func (o *UpdateTimeIntervalZKOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update time interval z k o k response has a 3xx status code
func (o *UpdateTimeIntervalZKOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update time interval z k o k response has a 4xx status code
func (o *UpdateTimeIntervalZKOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update time interval z k o k response has a 5xx status code
func (o *UpdateTimeIntervalZKOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update time interval z k o k response a status code equal to that given
func (o *UpdateTimeIntervalZKOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update time interval z k o k response
func (o *UpdateTimeIntervalZKOK) Code() int {
	return 200
}

func (o *UpdateTimeIntervalZKOK) Error() string {
	return fmt.Sprintf("[POST /segments/{tableNameWithType}/updateZKTimeInterval][%d] updateTimeIntervalZKOK ", 200)
}

func (o *UpdateTimeIntervalZKOK) String() string {
	return fmt.Sprintf("[POST /segments/{tableNameWithType}/updateZKTimeInterval][%d] updateTimeIntervalZKOK ", 200)
}

func (o *UpdateTimeIntervalZKOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateTimeIntervalZKNotFound creates a UpdateTimeIntervalZKNotFound with default headers values
func NewUpdateTimeIntervalZKNotFound() *UpdateTimeIntervalZKNotFound {
	return &UpdateTimeIntervalZKNotFound{}
}

/*
UpdateTimeIntervalZKNotFound describes a response with status code 404, with default header values.

Table not found
*/
type UpdateTimeIntervalZKNotFound struct {
}

// IsSuccess returns true when this update time interval z k not found response has a 2xx status code
func (o *UpdateTimeIntervalZKNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update time interval z k not found response has a 3xx status code
func (o *UpdateTimeIntervalZKNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update time interval z k not found response has a 4xx status code
func (o *UpdateTimeIntervalZKNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update time interval z k not found response has a 5xx status code
func (o *UpdateTimeIntervalZKNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update time interval z k not found response a status code equal to that given
func (o *UpdateTimeIntervalZKNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update time interval z k not found response
func (o *UpdateTimeIntervalZKNotFound) Code() int {
	return 404
}

func (o *UpdateTimeIntervalZKNotFound) Error() string {
	return fmt.Sprintf("[POST /segments/{tableNameWithType}/updateZKTimeInterval][%d] updateTimeIntervalZKNotFound ", 404)
}

func (o *UpdateTimeIntervalZKNotFound) String() string {
	return fmt.Sprintf("[POST /segments/{tableNameWithType}/updateZKTimeInterval][%d] updateTimeIntervalZKNotFound ", 404)
}

func (o *UpdateTimeIntervalZKNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateTimeIntervalZKInternalServerError creates a UpdateTimeIntervalZKInternalServerError with default headers values
func NewUpdateTimeIntervalZKInternalServerError() *UpdateTimeIntervalZKInternalServerError {
	return &UpdateTimeIntervalZKInternalServerError{}
}

/*
UpdateTimeIntervalZKInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type UpdateTimeIntervalZKInternalServerError struct {
}

// IsSuccess returns true when this update time interval z k internal server error response has a 2xx status code
func (o *UpdateTimeIntervalZKInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update time interval z k internal server error response has a 3xx status code
func (o *UpdateTimeIntervalZKInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update time interval z k internal server error response has a 4xx status code
func (o *UpdateTimeIntervalZKInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update time interval z k internal server error response has a 5xx status code
func (o *UpdateTimeIntervalZKInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update time interval z k internal server error response a status code equal to that given
func (o *UpdateTimeIntervalZKInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update time interval z k internal server error response
func (o *UpdateTimeIntervalZKInternalServerError) Code() int {
	return 500
}

func (o *UpdateTimeIntervalZKInternalServerError) Error() string {
	return fmt.Sprintf("[POST /segments/{tableNameWithType}/updateZKTimeInterval][%d] updateTimeIntervalZKInternalServerError ", 500)
}

func (o *UpdateTimeIntervalZKInternalServerError) String() string {
	return fmt.Sprintf("[POST /segments/{tableNameWithType}/updateZKTimeInterval][%d] updateTimeIntervalZKInternalServerError ", 500)
}

func (o *UpdateTimeIntervalZKInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
