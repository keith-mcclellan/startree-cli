// Code generated by go-swagger; DO NOT EDIT.

package zookeeper

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PutDataReader is a Reader for the PutData structure.
type PutDataReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutDataReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutDataOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewPutDataNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewPutDataNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutDataInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutDataOK creates a PutDataOK with default headers values
func NewPutDataOK() *PutDataOK {
	return &PutDataOK{}
}

/*
PutDataOK describes a response with status code 200, with default header values.

Success
*/
type PutDataOK struct {
}

// IsSuccess returns true when this put data o k response has a 2xx status code
func (o *PutDataOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put data o k response has a 3xx status code
func (o *PutDataOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put data o k response has a 4xx status code
func (o *PutDataOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put data o k response has a 5xx status code
func (o *PutDataOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put data o k response a status code equal to that given
func (o *PutDataOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the put data o k response
func (o *PutDataOK) Code() int {
	return 200
}

func (o *PutDataOK) Error() string {
	return fmt.Sprintf("[PUT /zk/put][%d] putDataOK ", 200)
}

func (o *PutDataOK) String() string {
	return fmt.Sprintf("[PUT /zk/put][%d] putDataOK ", 200)
}

func (o *PutDataOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutDataNoContent creates a PutDataNoContent with default headers values
func NewPutDataNoContent() *PutDataNoContent {
	return &PutDataNoContent{}
}

/*
PutDataNoContent describes a response with status code 204, with default header values.

No Content
*/
type PutDataNoContent struct {
}

// IsSuccess returns true when this put data no content response has a 2xx status code
func (o *PutDataNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put data no content response has a 3xx status code
func (o *PutDataNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put data no content response has a 4xx status code
func (o *PutDataNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put data no content response has a 5xx status code
func (o *PutDataNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put data no content response a status code equal to that given
func (o *PutDataNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put data no content response
func (o *PutDataNoContent) Code() int {
	return 204
}

func (o *PutDataNoContent) Error() string {
	return fmt.Sprintf("[PUT /zk/put][%d] putDataNoContent ", 204)
}

func (o *PutDataNoContent) String() string {
	return fmt.Sprintf("[PUT /zk/put][%d] putDataNoContent ", 204)
}

func (o *PutDataNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutDataNotFound creates a PutDataNotFound with default headers values
func NewPutDataNotFound() *PutDataNotFound {
	return &PutDataNotFound{}
}

/*
PutDataNotFound describes a response with status code 404, with default header values.

ZK Path not found
*/
type PutDataNotFound struct {
}

// IsSuccess returns true when this put data not found response has a 2xx status code
func (o *PutDataNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put data not found response has a 3xx status code
func (o *PutDataNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put data not found response has a 4xx status code
func (o *PutDataNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put data not found response has a 5xx status code
func (o *PutDataNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put data not found response a status code equal to that given
func (o *PutDataNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put data not found response
func (o *PutDataNotFound) Code() int {
	return 404
}

func (o *PutDataNotFound) Error() string {
	return fmt.Sprintf("[PUT /zk/put][%d] putDataNotFound ", 404)
}

func (o *PutDataNotFound) String() string {
	return fmt.Sprintf("[PUT /zk/put][%d] putDataNotFound ", 404)
}

func (o *PutDataNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutDataInternalServerError creates a PutDataInternalServerError with default headers values
func NewPutDataInternalServerError() *PutDataInternalServerError {
	return &PutDataInternalServerError{}
}

/*
PutDataInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type PutDataInternalServerError struct {
}

// IsSuccess returns true when this put data internal server error response has a 2xx status code
func (o *PutDataInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put data internal server error response has a 3xx status code
func (o *PutDataInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put data internal server error response has a 4xx status code
func (o *PutDataInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put data internal server error response has a 5xx status code
func (o *PutDataInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put data internal server error response a status code equal to that given
func (o *PutDataInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the put data internal server error response
func (o *PutDataInternalServerError) Code() int {
	return 500
}

func (o *PutDataInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /zk/put][%d] putDataInternalServerError ", 500)
}

func (o *PutDataInternalServerError) String() string {
	return fmt.Sprintf("[PUT /zk/put][%d] putDataInternalServerError ", 500)
}

func (o *PutDataInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
