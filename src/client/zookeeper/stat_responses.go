// Code generated by go-swagger; DO NOT EDIT.

package zookeeper

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// StatReader is a Reader for the Stat structure.
type StatReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StatReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStatOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewStatNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStatInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewStatOK creates a StatOK with default headers values
func NewStatOK() *StatOK {
	return &StatOK{}
}

/*
StatOK describes a response with status code 200, with default header values.

Success
*/
type StatOK struct {
}

// IsSuccess returns true when this stat o k response has a 2xx status code
func (o *StatOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this stat o k response has a 3xx status code
func (o *StatOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stat o k response has a 4xx status code
func (o *StatOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this stat o k response has a 5xx status code
func (o *StatOK) IsServerError() bool {
	return false
}

// IsCode returns true when this stat o k response a status code equal to that given
func (o *StatOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the stat o k response
func (o *StatOK) Code() int {
	return 200
}

func (o *StatOK) Error() string {
	return fmt.Sprintf("[GET /zk/stat][%d] statOK ", 200)
}

func (o *StatOK) String() string {
	return fmt.Sprintf("[GET /zk/stat][%d] statOK ", 200)
}

func (o *StatOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStatNotFound creates a StatNotFound with default headers values
func NewStatNotFound() *StatNotFound {
	return &StatNotFound{}
}

/*
StatNotFound describes a response with status code 404, with default header values.

Table not found
*/
type StatNotFound struct {
}

// IsSuccess returns true when this stat not found response has a 2xx status code
func (o *StatNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this stat not found response has a 3xx status code
func (o *StatNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stat not found response has a 4xx status code
func (o *StatNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this stat not found response has a 5xx status code
func (o *StatNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this stat not found response a status code equal to that given
func (o *StatNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the stat not found response
func (o *StatNotFound) Code() int {
	return 404
}

func (o *StatNotFound) Error() string {
	return fmt.Sprintf("[GET /zk/stat][%d] statNotFound ", 404)
}

func (o *StatNotFound) String() string {
	return fmt.Sprintf("[GET /zk/stat][%d] statNotFound ", 404)
}

func (o *StatNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStatInternalServerError creates a StatInternalServerError with default headers values
func NewStatInternalServerError() *StatInternalServerError {
	return &StatInternalServerError{}
}

/*
StatInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type StatInternalServerError struct {
}

// IsSuccess returns true when this stat internal server error response has a 2xx status code
func (o *StatInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this stat internal server error response has a 3xx status code
func (o *StatInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stat internal server error response has a 4xx status code
func (o *StatInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this stat internal server error response has a 5xx status code
func (o *StatInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this stat internal server error response a status code equal to that given
func (o *StatInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the stat internal server error response
func (o *StatInternalServerError) Code() int {
	return 500
}

func (o *StatInternalServerError) Error() string {
	return fmt.Sprintf("[GET /zk/stat][%d] statInternalServerError ", 500)
}

func (o *StatInternalServerError) String() string {
	return fmt.Sprintf("[GET /zk/stat][%d] statInternalServerError ", 500)
}

func (o *StatInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
