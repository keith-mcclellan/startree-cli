// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/spf13/cobra"
	"startree.ai/cli/models"
)

// Schema cli for TableTierDetails

// register flags to command
func registerModelTableTierDetailsFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerTableTierDetailsSegmentTiers(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerTableTierDetailsTableName(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerTableTierDetailsSegmentTiers(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: segmentTiers map[string]map[string]string map type is not supported by go-swagger cli yet

	return nil
}

func registerTableTierDetailsTableName(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	tableNameDescription := `Name of table to look for segment storage tiers`

	var tableNameFlagName string
	if cmdPrefix == "" {
		tableNameFlagName = "tableName"
	} else {
		tableNameFlagName = fmt.Sprintf("%v.tableName", cmdPrefix)
	}

	var tableNameFlagDefault string

	_ = cmd.PersistentFlags().String(tableNameFlagName, tableNameFlagDefault, tableNameDescription)

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelTableTierDetailsFlags(depth int, m *models.TableTierDetails, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, segmentTiersAdded := retrieveTableTierDetailsSegmentTiersFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || segmentTiersAdded

	err, tableNameAdded := retrieveTableTierDetailsTableNameFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || tableNameAdded

	return nil, retAdded
}

func retrieveTableTierDetailsSegmentTiersFlags(depth int, m *models.TableTierDetails, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	segmentTiersFlagName := fmt.Sprintf("%v.segmentTiers", cmdPrefix)
	if cmd.Flags().Changed(segmentTiersFlagName) {
		// warning: segmentTiers map type map[string]map[string]string is not supported by go-swagger cli yet
	}

	return nil, retAdded
}

func retrieveTableTierDetailsTableNameFlags(depth int, m *models.TableTierDetails, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	tableNameFlagName := fmt.Sprintf("%v.tableName", cmdPrefix)
	if cmd.Flags().Changed(tableNameFlagName) {

		var tableNameFlagName string
		if cmdPrefix == "" {
			tableNameFlagName = "tableName"
		} else {
			tableNameFlagName = fmt.Sprintf("%v.tableName", cmdPrefix)
		}

		tableNameFlagValue, err := cmd.Flags().GetString(tableNameFlagName)
		if err != nil {
			return err, false
		}
		m.TableName = tableNameFlagValue

		retAdded = true
	}

	return nil, retAdded
}
