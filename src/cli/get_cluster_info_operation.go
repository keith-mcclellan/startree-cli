// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"startree.ai/cli/client/cluster"

	"github.com/spf13/cobra"
)

// makeOperationClusterGetClusterInfoCmd returns a cmd to handle operation getClusterInfo
func makeOperationClusterGetClusterInfoCmd() (*cobra.Command, error) {
	cmd := &cobra.Command{
		Use:   "getClusterInfo",
		Short: `Get cluster Info`,
		RunE:  runOperationClusterGetClusterInfo,
	}

	if err := registerOperationClusterGetClusterInfoParamFlags(cmd); err != nil {
		return nil, err
	}

	return cmd, nil
}

// runOperationClusterGetClusterInfo uses cmd flags to call endpoint api
func runOperationClusterGetClusterInfo(cmd *cobra.Command, args []string) error {
	appCli, err := makeClient(cmd, args)
	if err != nil {
		return err
	}
	// retrieve flag values from cmd and fill params
	params := cluster.NewGetClusterInfoParams()
	if dryRun {

		logDebugf("dry-run flag specified. Skip sending request.")
		return nil
	}
	// make request and then print result
	msgStr, err := parseOperationClusterGetClusterInfoResult(appCli.Cluster.GetClusterInfo(params, nil))
	if err != nil {
		return err
	}
	if !debug {

		fmt.Println(msgStr)
	}
	return nil
}

// registerOperationClusterGetClusterInfoParamFlags registers all flags needed to fill params
func registerOperationClusterGetClusterInfoParamFlags(cmd *cobra.Command) error {
	return nil
}

// parseOperationClusterGetClusterInfoResult parses request result and return the string content
func parseOperationClusterGetClusterInfoResult(resp0 *cluster.GetClusterInfoOK, respErr error) (string, error) {
	if respErr != nil {

		// Non schema case: warning getClusterInfoOK is not supported

		// Non schema case: warning getClusterInfoInternalServerError is not supported

		return "", respErr
	}

	// warning: non schema response getClusterInfoOK is not supported by go-swagger cli yet.

	return "", nil
}
