// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/spf13/cobra"
	"startree.ai/cli/models"
)

// Schema cli for TagOverrideConfig

// register flags to command
func registerModelTagOverrideConfigFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerTagOverrideConfigRealtimeCompleted(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerTagOverrideConfigRealtimeConsuming(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerTagOverrideConfigRealtimeCompleted(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	realtimeCompletedDescription := ``

	var realtimeCompletedFlagName string
	if cmdPrefix == "" {
		realtimeCompletedFlagName = "realtimeCompleted"
	} else {
		realtimeCompletedFlagName = fmt.Sprintf("%v.realtimeCompleted", cmdPrefix)
	}

	var realtimeCompletedFlagDefault string

	_ = cmd.PersistentFlags().String(realtimeCompletedFlagName, realtimeCompletedFlagDefault, realtimeCompletedDescription)

	return nil
}

func registerTagOverrideConfigRealtimeConsuming(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	realtimeConsumingDescription := ``

	var realtimeConsumingFlagName string
	if cmdPrefix == "" {
		realtimeConsumingFlagName = "realtimeConsuming"
	} else {
		realtimeConsumingFlagName = fmt.Sprintf("%v.realtimeConsuming", cmdPrefix)
	}

	var realtimeConsumingFlagDefault string

	_ = cmd.PersistentFlags().String(realtimeConsumingFlagName, realtimeConsumingFlagDefault, realtimeConsumingDescription)

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelTagOverrideConfigFlags(depth int, m *models.TagOverrideConfig, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, realtimeCompletedAdded := retrieveTagOverrideConfigRealtimeCompletedFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || realtimeCompletedAdded

	err, realtimeConsumingAdded := retrieveTagOverrideConfigRealtimeConsumingFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || realtimeConsumingAdded

	return nil, retAdded
}

func retrieveTagOverrideConfigRealtimeCompletedFlags(depth int, m *models.TagOverrideConfig, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	realtimeCompletedFlagName := fmt.Sprintf("%v.realtimeCompleted", cmdPrefix)
	if cmd.Flags().Changed(realtimeCompletedFlagName) {

		var realtimeCompletedFlagName string
		if cmdPrefix == "" {
			realtimeCompletedFlagName = "realtimeCompleted"
		} else {
			realtimeCompletedFlagName = fmt.Sprintf("%v.realtimeCompleted", cmdPrefix)
		}

		realtimeCompletedFlagValue, err := cmd.Flags().GetString(realtimeCompletedFlagName)
		if err != nil {
			return err, false
		}
		m.RealtimeCompleted = realtimeCompletedFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveTagOverrideConfigRealtimeConsumingFlags(depth int, m *models.TagOverrideConfig, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	realtimeConsumingFlagName := fmt.Sprintf("%v.realtimeConsuming", cmdPrefix)
	if cmd.Flags().Changed(realtimeConsumingFlagName) {

		var realtimeConsumingFlagName string
		if cmdPrefix == "" {
			realtimeConsumingFlagName = "realtimeConsuming"
		} else {
			realtimeConsumingFlagName = fmt.Sprintf("%v.realtimeConsuming", cmdPrefix)
		}

		realtimeConsumingFlagValue, err := cmd.Flags().GetString(realtimeConsumingFlagName)
		if err != nil {
			return err, false
		}
		m.RealtimeConsuming = realtimeConsumingFlagValue

		retAdded = true
	}

	return nil, retAdded
}
