// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/spf13/cobra"
	"startree.ai/cli/models"
)

// Schema cli for PartitionOffsetInfo

// register flags to command
func registerModelPartitionOffsetInfoFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerPartitionOffsetInfoAvailabilityLagMsMap(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPartitionOffsetInfoCurrentOffsetsMap(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPartitionOffsetInfoLatestUpstreamOffsetMap(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPartitionOffsetInfoRecordsLagMap(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerPartitionOffsetInfoAvailabilityLagMsMap(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: availabilityLagMsMap map[string]string map type is not supported by go-swagger cli yet

	return nil
}

func registerPartitionOffsetInfoCurrentOffsetsMap(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: currentOffsetsMap map[string]string map type is not supported by go-swagger cli yet

	return nil
}

func registerPartitionOffsetInfoLatestUpstreamOffsetMap(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: latestUpstreamOffsetMap map[string]string map type is not supported by go-swagger cli yet

	return nil
}

func registerPartitionOffsetInfoRecordsLagMap(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: recordsLagMap map[string]string map type is not supported by go-swagger cli yet

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelPartitionOffsetInfoFlags(depth int, m *models.PartitionOffsetInfo, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, availabilityLagMsMapAdded := retrievePartitionOffsetInfoAvailabilityLagMsMapFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || availabilityLagMsMapAdded

	err, currentOffsetsMapAdded := retrievePartitionOffsetInfoCurrentOffsetsMapFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || currentOffsetsMapAdded

	err, latestUpstreamOffsetMapAdded := retrievePartitionOffsetInfoLatestUpstreamOffsetMapFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || latestUpstreamOffsetMapAdded

	err, recordsLagMapAdded := retrievePartitionOffsetInfoRecordsLagMapFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || recordsLagMapAdded

	return nil, retAdded
}

func retrievePartitionOffsetInfoAvailabilityLagMsMapFlags(depth int, m *models.PartitionOffsetInfo, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	availabilityLagMsMapFlagName := fmt.Sprintf("%v.availabilityLagMsMap", cmdPrefix)
	if cmd.Flags().Changed(availabilityLagMsMapFlagName) {
		// warning: availabilityLagMsMap map type map[string]string is not supported by go-swagger cli yet
	}

	return nil, retAdded
}

func retrievePartitionOffsetInfoCurrentOffsetsMapFlags(depth int, m *models.PartitionOffsetInfo, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	currentOffsetsMapFlagName := fmt.Sprintf("%v.currentOffsetsMap", cmdPrefix)
	if cmd.Flags().Changed(currentOffsetsMapFlagName) {
		// warning: currentOffsetsMap map type map[string]string is not supported by go-swagger cli yet
	}

	return nil, retAdded
}

func retrievePartitionOffsetInfoLatestUpstreamOffsetMapFlags(depth int, m *models.PartitionOffsetInfo, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	latestUpstreamOffsetMapFlagName := fmt.Sprintf("%v.latestUpstreamOffsetMap", cmdPrefix)
	if cmd.Flags().Changed(latestUpstreamOffsetMapFlagName) {
		// warning: latestUpstreamOffsetMap map type map[string]string is not supported by go-swagger cli yet
	}

	return nil, retAdded
}

func retrievePartitionOffsetInfoRecordsLagMapFlags(depth int, m *models.PartitionOffsetInfo, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	recordsLagMapFlagName := fmt.Sprintf("%v.recordsLagMap", cmdPrefix)
	if cmd.Flags().Changed(recordsLagMapFlagName) {
		// warning: recordsLagMap map type map[string]string is not supported by go-swagger cli yet
	}

	return nil, retAdded
}
