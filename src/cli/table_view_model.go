// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/spf13/cobra"
	"startree.ai/cli/models"
)

// Schema cli for TableView

// register flags to command
func registerModelTableViewFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerTableViewOFFLINE(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerTableViewREALTIME(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerTableViewOFFLINE(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: OFFLINE map[string]map[string]string map type is not supported by go-swagger cli yet

	return nil
}

func registerTableViewREALTIME(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: REALTIME map[string]map[string]string map type is not supported by go-swagger cli yet

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelTableViewFlags(depth int, m *models.TableView, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, oFFLINEAdded := retrieveTableViewOFFLINEFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || oFFLINEAdded

	err, rEALTIMEAdded := retrieveTableViewREALTIMEFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || rEALTIMEAdded

	return nil, retAdded
}

func retrieveTableViewOFFLINEFlags(depth int, m *models.TableView, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	oFFLINEFlagName := fmt.Sprintf("%v.OFFLINE", cmdPrefix)
	if cmd.Flags().Changed(oFFLINEFlagName) {
		// warning: OFFLINE map type map[string]map[string]string is not supported by go-swagger cli yet
	}

	return nil, retAdded
}

func retrieveTableViewREALTIMEFlags(depth int, m *models.TableView, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	rEALTIMEFlagName := fmt.Sprintf("%v.REALTIME", cmdPrefix)
	if cmd.Flags().Changed(rEALTIMEFlagName) {
		// warning: REALTIME map type map[string]map[string]string is not supported by go-swagger cli yet
	}

	return nil, retAdded
}
