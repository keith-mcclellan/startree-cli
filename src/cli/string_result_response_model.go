// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/spf13/cobra"
	"startree.ai/cli/models"
)

// Schema cli for StringResultResponse

// register flags to command
func registerModelStringResultResponseFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerStringResultResponseResult(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerStringResultResponseResult(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	resultDescription := ``

	var resultFlagName string
	if cmdPrefix == "" {
		resultFlagName = "result"
	} else {
		resultFlagName = fmt.Sprintf("%v.result", cmdPrefix)
	}

	var resultFlagDefault string

	_ = cmd.PersistentFlags().String(resultFlagName, resultFlagDefault, resultDescription)

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelStringResultResponseFlags(depth int, m *models.StringResultResponse, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, resultAdded := retrieveStringResultResponseResultFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || resultAdded

	return nil, retAdded
}

func retrieveStringResultResponseResultFlags(depth int, m *models.StringResultResponse, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	resultFlagName := fmt.Sprintf("%v.result", cmdPrefix)
	if cmd.Flags().Changed(resultFlagName) {

		var resultFlagName string
		if cmdPrefix == "" {
			resultFlagName = "result"
		} else {
			resultFlagName = fmt.Sprintf("%v.result", cmdPrefix)
		}

		resultFlagValue, err := cmd.Flags().GetString(resultFlagName)
		if err != nil {
			return err, false
		}
		m.Result = resultFlagValue

		retAdded = true
	}

	return nil, retAdded
}
