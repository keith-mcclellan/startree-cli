// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/spf13/cobra"
	"startree.ai/cli/models"
)

// Schema cli for TableTaskConfig

// register flags to command
func registerModelTableTaskConfigFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerTableTaskConfigTaskTypeConfigsMap(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerTableTaskConfigTaskTypeConfigsMap(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: taskTypeConfigsMap map[string]map[string]string map type is not supported by go-swagger cli yet

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelTableTaskConfigFlags(depth int, m *models.TableTaskConfig, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, taskTypeConfigsMapAdded := retrieveTableTaskConfigTaskTypeConfigsMapFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || taskTypeConfigsMapAdded

	return nil, retAdded
}

func retrieveTableTaskConfigTaskTypeConfigsMapFlags(depth int, m *models.TableTaskConfig, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	taskTypeConfigsMapFlagName := fmt.Sprintf("%v.taskTypeConfigsMap", cmdPrefix)
	if cmd.Flags().Changed(taskTypeConfigsMapFlagName) {
		// warning: taskTypeConfigsMap map type map[string]map[string]string is not supported by go-swagger cli yet
	}

	return nil, retAdded
}
