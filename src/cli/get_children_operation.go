// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"startree.ai/cli/client/zookeeper"

	"github.com/spf13/cobra"
)

// makeOperationZookeeperGetChildrenCmd returns a cmd to handle operation getChildren
func makeOperationZookeeperGetChildrenCmd() (*cobra.Command, error) {
	cmd := &cobra.Command{
		Use:   "getChildren",
		Short: ``,
		RunE:  runOperationZookeeperGetChildren,
	}

	if err := registerOperationZookeeperGetChildrenParamFlags(cmd); err != nil {
		return nil, err
	}

	return cmd, nil
}

// runOperationZookeeperGetChildren uses cmd flags to call endpoint api
func runOperationZookeeperGetChildren(cmd *cobra.Command, args []string) error {
	appCli, err := makeClient(cmd, args)
	if err != nil {
		return err
	}
	// retrieve flag values from cmd and fill params
	params := zookeeper.NewGetChildrenParams()
	if err, _ := retrieveOperationZookeeperGetChildrenPathFlag(params, "", cmd); err != nil {
		return err
	}
	if dryRun {

		logDebugf("dry-run flag specified. Skip sending request.")
		return nil
	}
	// make request and then print result
	msgStr, err := parseOperationZookeeperGetChildrenResult(appCli.Zookeeper.GetChildren(params, nil))
	if err != nil {
		return err
	}
	if !debug {

		fmt.Println(msgStr)
	}
	return nil
}

// registerOperationZookeeperGetChildrenParamFlags registers all flags needed to fill params
func registerOperationZookeeperGetChildrenParamFlags(cmd *cobra.Command) error {
	if err := registerOperationZookeeperGetChildrenPathParamFlags("", cmd); err != nil {
		return err
	}
	return nil
}

func registerOperationZookeeperGetChildrenPathParamFlags(cmdPrefix string, cmd *cobra.Command) error {

	pathDescription := `Required. Zookeeper Path, must start with /`

	var pathFlagName string
	if cmdPrefix == "" {
		pathFlagName = "path"
	} else {
		pathFlagName = fmt.Sprintf("%v.path", cmdPrefix)
	}

	var pathFlagDefault string

	_ = cmd.PersistentFlags().String(pathFlagName, pathFlagDefault, pathDescription)

	return nil
}

func retrieveOperationZookeeperGetChildrenPathFlag(m *zookeeper.GetChildrenParams, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false
	if cmd.Flags().Changed("path") {

		var pathFlagName string
		if cmdPrefix == "" {
			pathFlagName = "path"
		} else {
			pathFlagName = fmt.Sprintf("%v.path", cmdPrefix)
		}

		pathFlagValue, err := cmd.Flags().GetString(pathFlagName)
		if err != nil {
			return err, false
		}
		m.Path = pathFlagValue

	}
	return nil, retAdded
}

// parseOperationZookeeperGetChildrenResult parses request result and return the string content
func parseOperationZookeeperGetChildrenResult(resp0 *zookeeper.GetChildrenOK, resp1 *zookeeper.GetChildrenNoContent, respErr error) (string, error) {
	if respErr != nil {

		// Non schema case: warning getChildrenOK is not supported

		// Non schema case: warning getChildrenNoContent is not supported

		// Non schema case: warning getChildrenNotFound is not supported

		// Non schema case: warning getChildrenInternalServerError is not supported

		return "", respErr
	}

	// warning: non schema response getChildrenOK is not supported by go-swagger cli yet.

	// warning: non schema response getChildrenNoContent is not supported by go-swagger cli yet.

	return "", nil
}
