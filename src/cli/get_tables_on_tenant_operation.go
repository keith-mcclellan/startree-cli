// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"startree.ai/cli/client/tenant"

	"github.com/spf13/cobra"
)

// makeOperationTenantGetTablesOnTenantCmd returns a cmd to handle operation getTablesOnTenant
func makeOperationTenantGetTablesOnTenantCmd() (*cobra.Command, error) {
	cmd := &cobra.Command{
		Use:   "getTablesOnTenant",
		Short: ``,
		RunE:  runOperationTenantGetTablesOnTenant,
	}

	if err := registerOperationTenantGetTablesOnTenantParamFlags(cmd); err != nil {
		return nil, err
	}

	return cmd, nil
}

// runOperationTenantGetTablesOnTenant uses cmd flags to call endpoint api
func runOperationTenantGetTablesOnTenant(cmd *cobra.Command, args []string) error {
	appCli, err := makeClient(cmd, args)
	if err != nil {
		return err
	}
	// retrieve flag values from cmd and fill params
	params := tenant.NewGetTablesOnTenantParams()
	if err, _ := retrieveOperationTenantGetTablesOnTenantTenantNameFlag(params, "", cmd); err != nil {
		return err
	}
	if dryRun {

		logDebugf("dry-run flag specified. Skip sending request.")
		return nil
	}
	// make request and then print result
	msgStr, err := parseOperationTenantGetTablesOnTenantResult(appCli.Tenant.GetTablesOnTenant(params, nil))
	if err != nil {
		return err
	}
	if !debug {

		fmt.Println(msgStr)
	}
	return nil
}

// registerOperationTenantGetTablesOnTenantParamFlags registers all flags needed to fill params
func registerOperationTenantGetTablesOnTenantParamFlags(cmd *cobra.Command) error {
	if err := registerOperationTenantGetTablesOnTenantTenantNameParamFlags("", cmd); err != nil {
		return err
	}
	return nil
}

func registerOperationTenantGetTablesOnTenantTenantNameParamFlags(cmdPrefix string, cmd *cobra.Command) error {

	tenantNameDescription := `Required. Tenant name`

	var tenantNameFlagName string
	if cmdPrefix == "" {
		tenantNameFlagName = "tenantName"
	} else {
		tenantNameFlagName = fmt.Sprintf("%v.tenantName", cmdPrefix)
	}

	var tenantNameFlagDefault string

	_ = cmd.PersistentFlags().String(tenantNameFlagName, tenantNameFlagDefault, tenantNameDescription)

	return nil
}

func retrieveOperationTenantGetTablesOnTenantTenantNameFlag(m *tenant.GetTablesOnTenantParams, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false
	if cmd.Flags().Changed("tenantName") {

		var tenantNameFlagName string
		if cmdPrefix == "" {
			tenantNameFlagName = "tenantName"
		} else {
			tenantNameFlagName = fmt.Sprintf("%v.tenantName", cmdPrefix)
		}

		tenantNameFlagValue, err := cmd.Flags().GetString(tenantNameFlagName)
		if err != nil {
			return err, false
		}
		m.TenantName = tenantNameFlagValue

	}
	return nil, retAdded
}

// parseOperationTenantGetTablesOnTenantResult parses request result and return the string content
func parseOperationTenantGetTablesOnTenantResult(resp0 *tenant.GetTablesOnTenantOK, respErr error) (string, error) {
	if respErr != nil {

		// Non schema case: warning getTablesOnTenantOK is not supported

		// Non schema case: warning getTablesOnTenantInternalServerError is not supported

		return "", respErr
	}

	// warning: non schema response getTablesOnTenantOK is not supported by go-swagger cli yet.

	return "", nil
}
