// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// TableTaskConfig table task config
//
// swagger:model TableTaskConfig
type TableTaskConfig struct {

	// task type configs map
	// Read Only: true
	TaskTypeConfigsMap map[string]map[string]string `json:"taskTypeConfigsMap,omitempty"`
}

// Validate validates this table task config
func (m *TableTaskConfig) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this table task config based on the context it is used
func (m *TableTaskConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateTaskTypeConfigsMap(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TableTaskConfig) contextValidateTaskTypeConfigsMap(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *TableTaskConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TableTaskConfig) UnmarshalBinary(b []byte) error {
	var res TableTaskConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
